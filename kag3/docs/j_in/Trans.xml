<?xml version="1.0" encoding="ISO-8859-1" ?>
<doc>

<title>Using Transitions</title>

<para>
<ptitle>Introduction</ptitle>
Screen transitions like fade, fade-out, blind, etc., that change scenes over time are called <kw>transitions</kw>. <r/>
In TyranoScript/KAG, you can use three types of transitions: cross-fade transitions, universal transitions, and scroll transitions.<r/>
Additionally, by using the TyranoScript transition plugin (extrans.dll), you can use even more transition effects (please refer to "About Transitions" in the TyranoScript SDK help).<r/>
</para>

<para>
<ptitle>Cross-fade Transitions</ptitle>
Cross-fade transitions are simple scene switching effects.<r/>
For transitions, you need both the pre-transition image and the post-transition image. In KAG, the pre-transition image is on the fore page, and the post-transition image is on the back page. The back page's image can also be shown on the fore page.<r/>
When the transition starts, the fore page's image is gradually replaced by the back page's image over time, and finally, the back page's image becomes the fore page's image.<r/>
<r/>
<note>
KAG has <kw>fade-out</kw> and <kw>fade-in</kw> tags. When you want to fade out first, make the back page transparent and perform a cross-fade transition.
</note>
</para>

<para>
<ptitle>Universal Transitions</ptitle>
Universal transitions are a versatile transition mechanism that allows you to create "scene switching effects" freely.<r/>
<r/>
First, universal transitions require what's called a <kw>rule image</kw>, which is a grayscale image. If the rule image's size differs from the transition area, it will be automatically tiled to fill the space. This image is used as a "rule" to progress the transition.<r/>
Additionally, universal transitions require two parameters: <kw>time</kw> (duration of the transition) and <kw>vague</kw> (<kw>blur value</kw>).<r/>
<r/>
Let me explain.<r/>
<r/>
Please look at these images.<r/>
<descimg>
<dititle>Pre-transition, Post-transition, and Rule image</dititle>
<img src="univtrans_A.png"/><img src="univtrans_B.png"/><img src="univtrans_R.png"/>
</descimg>
<r/>
Like this, we'll transition from image A to image B. For the rule image, we'll use a simple top-to-bottom, left-to-right gradient image.<r/>
<r/>
Now, if we set <kw>vague</kw> (blur value) to 1, the transition progresses as follows. It progresses from left to right. Although it looks like the images are arranged side by side, they are actually displayed at the same place at the same time.<r/>
<descimg>
<dititle>When vague=1</dititle>
<img src="univtrans_V1.png"/>
</descimg>
<r/>
Following the rule image's brightness, from light to dark, image B gradually replaces image A.<r/>
<r/>
Let's try setting vague=64.<r/>
<descimg>
<dititle>When vague=64</dititle>
<img src="univtrans_V64.png"/>
</descimg>
Notice how the boundary between images A and B is blurred? By increasing the vague value, you can create a larger blended area during the transition where neither A nor B is fully visible. You can specify any positive number for vague.<r/>
<r/>
By using rule images with various patterns instead of simple gradients, you can create natural transitions that follow these patterns.<r/>
<r/>
The TyranoScript download page <at target="_top" href="http://kikyou.info/tvp/">http://kikyou.info/tvp/</at> offers a "Transition Library" with over 20 rule images for universal transitions.<r/>
</para>

<para>
<ptitle>Scroll Transitions</ptitle>
Unlike universal transitions, scroll transitions work by scrolling the switching (back) image's area over the current (fore) image.<r/>
For the switching (back) image, you can choose from four directions: up, down, right, and left.<r/>
There are also three types of scroll behaviors.<r/>
<r/>
First, when <kw>stay</kw> is set to "stayfore", the scroll transition looks like this (when scrolling from left):<r/>
<descimg>
<dititle>When stay=stayfore</dititle>
<img src="univtrans_Sstay.png"/>
</descimg>
Like this, when stay is set to "stayfore", the fore page image remains fixed while the back page moves in from the edge.<r/>
<r/>
When stay is set to "stayback", the scroll transition looks like this:<r/>
<descimg>
<dititle>When stay=stayback</dititle>
<img src="univtrans_Sstaysrc.png"/>
</descimg>
In this case, the fore page layer moves out while the back page layer remains fixed.<r/>
<r/>
When stay is set to "nostay", it looks like this:<r/>
<descimg>
<dititle>stay=nostay</dititle>
<img src="univtrans_Snostay.png"/>
</descimg>
Like this, both images scroll together. By connecting images A and B horizontally or vertically, you can create the effect of scrolling across a large screen. However, it's not very suitable for foreground layer transitions <tt>(^^;;</tt><r/>
</para>

<para>
<ptitle>Fore Page and Back Page</ptitle>
The concepts of <kw>fore page</kw> and <kw>back page</kw> are particularly important when performing transitions.<r/>
As introduced in <link href="DispBase"/>, KAG has a fore page that is directly visible and a back page that isn't visible, displaying content differently on these pages.<r/>
KAG transitions always work by showing the back page's content while the fore page's content is currently displayed. When the transition ends, the fore page's content becomes identical to the back page's content.<r/>
Therefore, you must prepare the back page before the transition.<r/>
<r/>
Let me explain. Let's consider changing just the background layer.<r/>
First, before the transition, let's say the layers are in this state (fore, back):<r/>
<r/>
<descimg>
<dititle>Before Transition</dititle>
<img src="trans0f.jpg"/>
<img src="trans0b.jpg"/>
</descimg>
At this point, the fore page shows the background layer, foreground layer, and message layer. The back page's state is undefined.<r/>
Then we use the [backlay] tag to make the back page identical to the fore page.<r/>
<descimg>
<dititle>After backlay tag</dititle>
<img src="trans0f.jpg"/>
<img src="trans0f.jpg"/>
</descimg>

Since transitions move the back page's content to the fore page, we must prepare the back page before performing the transition.<r/>
Here, since we're only changing the background layer, we load an image into the back page's background layer.<r/>
<descimg>
<dititle>After loading image to back page's background layer</dititle>
<img src="trans0f.jpg"/>
<img src="trans2b.jpg"/>
</descimg>
Now we perform the transition using the trans tag. As you can see, the transition shows the back page's image on the fore page.<r/>
During transition, it looks like this (transition example):<r/>
<descimg>
<dititle>During Transition</dititle>
<img src="trans3f.jpg"/>
<img src="trans2b.jpg"/>
</descimg>
We wait for the transition using the [wt] tag.<r/>
When the transition ends, the back page and fore page become identical, like this:<r/>
<descimg>
<dititle>After Transition</dititle>
<img src="trans2b.jpg"/>
<img src="trans2b.jpg"/>
</descimg>
</para>

<para>
<ptitle>Let's Try Changing the Background Layer</ptitle>
To perform transitions, we use the <kw>trans</kw> tag.<r/>
Basically, transitions first use the [<kw>backlay</kw>] tag to copy all fore page layers to the back page, then make changes to the back page using tags like image, and finally perform the transition using the trans tag. This applies the changes made to the back page to the fore page, replacing the current fore page.<r/>
<r/>
First, let's try changing the background layer using a cross-fade transition.<r/>
<r/>
<bq>
[image storage="bg0" page=fore layer=base]<r/>
[wait time=200]<r/>
*start|Start<r/>
[cm]<r/>
Hello. I'll change the background layer.[l][r]<r/>
<b>[backlay]</b><r/>
[image storage="bg1" layer=base <b>page=back</b>]<r/>
<b>[trans method=crossfade time=1500]</b><r/>
<b>[wt]</b><r/>
Did it change?<r/>
</bq>
First, the [backlay] tag copies the fore page layer content to the back page.<r/>
Then, we load the image to be displayed next into the back page's background layer.<r/>
At this point, the back page differs from the fore page only in the background image.<r/>
Then we perform the transition using the trans tag. As shown, specifying <tt>method=crossfade</tt> makes it a universal transition. In this example, we specify 1.5 seconds for the duration. Time is specified in milliseconds as <tt>time=1500</tt>.<r/>
<note>
Although specified in milliseconds, it may not be exactly millisecond-precise.
</note>

Then, we wait for the transition to end using the <kw>wt</kw> tag. <b>In KAG, if you omit the wt tag, the transition won't wait to complete before proceeding</b>, so please don't forget the wt tag.<r/>
<note>
Regardless of transitions, most KAG tags that "perform something over time" don't wait for completion by themselves and need separate wait tags. This allows things like transitioning while fading out BGM.<r/>
Also, <b>make sure to include the corresponding "wait" tag</b>. Even when combining different operations (like waiting for transition completion with a wait tag), you still need to include all corresponding "wait" tags.<r/>
</note>
<r/>
<r/>
Now, using a universal transition would look like this:<r/>
<bq>
[image storage="bg0" page=fore layer=base]<r/>
[wait time=200]<r/>
*start|Start<r/>
[cm]<r/>
Hello. I'll change the background layer.[l][r]<r/>
<b>[backlay]</b><r/>
[image storage="bg1" layer=base <b>page=back</b>]<r/>
<b>[trans method=universal rule="rule1" vague=1 time=1500]</b><r/>
<b>[wt]</b><r/>
Did it change?<r/>
</bq>
<r/>
And for a scroll transition, scrolling from right with no stay effect:<r/>
<r/>
<bq>
[image storage="bg0" page=fore layer=base]<r/>
[wait time=200]<r/>
*start|Start<r/>
[cm]<r/>
Hello. I'll change the background layer.[l][r]<r/>
[backlay]<r/>
[image storage="bg1" layer=base <b>page=back</b>]<r/>
[trans <b>method=scroll from=right stay=nostay children=false</b> time=1500]<r/>
[wt]<r/>
Did it change?<r/>
</bq>
Here we specify <tt>children=false</tt> because without it, the "<kw>child layers</kw>" would move together. In KAG, the foreground layer and message layer are children of the background layer.<r/>
If you want the child layers to scroll together, set <tt>children=true</tt>.<r/>
</para>

<para>
<ptitle>Let's Try Changing the Foreground Layer</ptitle>
To change the foreground layer, we use the trans tag.<r/>
<r/>
<bq>
[image storage="bg0" page=fore layer=base]<r/>
[wait time=200]<r/>
*start|Start<r/>
[cm]<r/>
Hello. I'll show the foreground layer using a transition.[l][r]<r/>
[backlay]<r/>
[image layer=0 page=back storage="fg0" visible=true]<r/>
; At this point, foreground layer 0 on the fore page is (by default) invisible,<r/>
; At this point, foreground layer 0 on the back page has an image loaded,<r/>
; and due to the backlay tag, all other back page layers are identical to fore page<r/>
[trans method=crossfade time=1500][wt]<r/>

Now, I'll change the foreground layer.[l][r]<r/>
[backlay]<r/>
[image layer=0 page=back storage="fg1" visible=true]<r/>
; At this point, foreground layer 0 on the back page has image fg1,<r/>
; and due to the backlay tag, all other back page layers are identical to fore page<r/>
[trans method=crossfade time=1500][wt]<r/>
And now, I'll hide the foreground layer.[l][r]<r/>
[backlay]<r/>
[layopt layer=0 page=back visible=false]<r/>
; At this point, foreground layer 0 on the back page is invisible,<r/>
; and due to the backlay tag, all other back page layers are identical to fore page<r/>
[trans method=crossfade time=1500][wt]<r/>
</bq>
This example shows displaying the foreground layer, changing it to a different image, and then hiding it.<r/>
First, we use the backlay tag to copy all fore page content to the back page. Then, after making the desired changes - in this case displaying the foreground layer - we load the image into the back page's foreground layer.<r/>
After that, we use the trans tag.<r/>
<r/>
Next, to change the foreground layer, we again use backlay to copy to the back page, make the desired changes, and perform the transition using the trans tag.<r/>
<r/>
Finally, to hide the foreground layer, we use backlay to copy to the back page, then set the relevant foreground layer to invisible. Being invisible means it won't be displayed (will be transparent), and when we perform the transition, it will fade out.<r/>
<r/>
Note that while you might wonder about setting visible=true for layers on the back page, since the back page (background layer and its child layers) is always invisible by default, there's no need to worry about the visible=true setting causing premature display.<r/>
<r/>
<note>
In the above example, when the trans tag omits the layer parameter, it defaults to base (background layer), and when children is omitted, it defaults to true (transition includes child layers).<r/>
When displaying foreground layers with transitions, changing them, hiding them, and other various transitions, it's desirable to transition the background layer together with its child layers. While you can perform transitions specifically on foreground layers or message layers using layer=0 etc., this is rarely used in practice.<r/>
</note>
</para>

<para>
<ptitle>Let's Try Changing the Message Layer</ptitle>
You can switch the message layer using the same method.<r/>
For the message layer, since visibility can be controlled with the layopt tag, you can perform similar operations.<r/>
<r/>
For example, to draw the message layer while keeping it invisible, then display it with a transition, do the following. Then, use a transition to hide the message layer.<r/>
<r/>
<bq>
[layopt layer=message page=fore visible=false]<r/>
; First make the fore page message layer invisible<r/>
[layopt layer=message page=back visible=true]<r/>
; Make the back page message layer visible<r/>
[wait time=200]<r/>
*start|Start<r/>
[cm]<r/>
[current page=back]<r/>
; Set target message layer to back page<r/>
[delay speed=nowait]<r/>
; Set text drawing speed to no-wait<r/>
You can display the message layer using transitions like this.[r]<r/>
[delay speed=user]<r/>
; Return text drawing speed to normal<r/>
[trans method=universal rule="trans1" vague=1 time=1500][wt]<r/>
; Universal transition<r/>
[current page=fore]<r/>
; Set target message layer back to fore page<r/>
[l]<r/>
; Wait for click<r/>
[layopt layer=message page=back visible=false]<r/>
; Make back page message layer invisible<r/>
[trans method=universal rule="trans1" vague=1 time=1500][wt]<r/>
; Transition<r/>
</bq>
</para>
</doc>