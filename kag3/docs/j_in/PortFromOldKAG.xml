<?xml version="1.0" encoding="ISO-8859-1" ?>
<doc>
<title>Migration from Old KAG to KAG 3 and New Features in KAG 3</title>
<para>
<ptitle>About Migration to KAG 3</ptitle>
Since KAG 3 is a new implementation of KAG, while maintaining scenario-level compatibility, there are some differences.<r/>
One major change is that line breaks in scenario files are now ignored, but you can restore the old KAG behavior by setting <tt>global.ignoreCR</tt> to <tt>false</tt> in Config.tjs.<r/>
Also, the time parameter in the quake tag is now in milliseconds in KAG 3. If you want to use character units like in previous versions, set <tt>defaultQuakeTimeInChUnit</tt> to <tt>true</tt> in Config.tjs.<r/>
<r/>
Text appears slightly larger compared to previous KAG versions. Try specifying a smaller font size.<r/>
<r/>
Please note that by default, save data is now stored in the savedata folder under the executable file's directory.<r/>
<r/>
There are some differences in tag behavior:<r/>
<ul>
  <li>emb tag no longer has zenkaku parameter</li>
  <li>playvideo and usesound are deprecated</li>
  <li>clearsysvar only clears system variables</li>
</ul>
<r/>
There might be other tags that behave differently, but these are likely bugs in KAG 3. Please report if you find anything strange.
<r/>
For plugin compatibility differences, please see "About Plugins" in <link href="Prepare"/>.<r/>
</para>

<para>
<ptitle>New Features in KAG 3</ptitle>
<dl>
<dt>KAG Scenario Parser Built into Kirikiri 2 Core</dt>
<dd>
The KAG scenario parsing functionality is now built into the Kirikiri 2 core.
While in KAG 2.x this was written in TJS script, incorporating it into the core
has significantly improved scenario parsing speed.
</dd>

<dt>Most Tags Can Use cond Parameter</dt>

<dd>
The cond parameter can be used with almost all tags, and when specified as cond="expression",
the tag will only execute when the condition is true. For example,<r/>
<bq>
[jump cond="f.flag1==0" target=*loop]<r/>
</bq>
means jump to the label *loop only when f.flag1 is 0.
</dd>

<dt>Animation Files Changed from asq to asd</dt>
<dd>
Changed to asd format, which is a more versatile text format. The distribution includes
asq2asd script to convert asq files to asd files. For asd file format details,
please refer to AnimationLayer.tjs.<r/>
Also, using what's called animation segments, you can now execute multiple
animations simultaneously on the same image.
</dd>

<dt>Message Layer Supports Vertical Text Display</dt>

<dd>
Now supports vertical text display depending on the content. Configure in Config.tjs.
</dd>

<dt>Save Data Compression Available</dt>

<dd>
Simple compression can now be applied to save data. Configure in Config.tjs.
</dd>

<dt>UNICODE File Support</dt>

<dd>
Text files output by Kirikiri 2 are basically UNICODE (UTF-16).<r/>
Save data and other files are output in UNICODE. It's recommended to have a text
editor that can handle UNICODE.<r/>
Files read into Kirikiri 2 (like KAG scenarios) can now also be UNICODE format
text files.
</dd>

<dt>Movie Playback Now Supports MPEG</dt>

<dd>
MPEG playback is now supported. MPEG files can be played even when stored in archives.<r/>
However, to play movies, krmovie.dll must be in the same folder as the Kirikiri 2
executable.<r/>
Also, DirectX 8 or later must be installed on the OS to play movies (DirectX 9 or later
recommended).
</dd>

<dt>Pre-rendered Font Support</dt>

<dd>
Using pre-rendered fonts can eliminate font differences between OS versions and
resolve issues with thin characters. Also allows using fonts that aren't installed
on the player's system by using the creator's font data.<r/>
Use krkrfont.exe to create pre-rendered fonts.
</dd>
</dl>
</para>
</doc>