<?xml version="1.0" encoding="iso-8859-1" ?>
<doc>
<title>Using Clickable Maps</title>

<para>
<ptitle>What is a Clickable Map</ptitle>
    A clickable map is a "map" that can be "clicked", where specific "areas" are defined within an image, allowing users to select these areas using a mouse or similar input device.<r/>
<r/>
    In Kirikiri/KAG, this is implemented using two files in addition to the main image: an <kw>area image</kw> and an <kw>area action definition file</kw>.<r/>
</para>

<para>
<ptitle>About Area Images</ptitle>
    An area image is a 256-color image of the same size as the main image. It cannot be a full-color image. JPEG is not suitable for this purpose, so use image formats that support 256 colors like PNG or BMP.<r/>
<r/>
    An area image is created by filling each area corresponding to the main image with arbitrary <kw>palette indices</kw>. For example:<r/>
<descimg>
<dititle>Main Image (Left) and Area Image (Right)</dititle>
<img src="map1.png"/><img src="map1_p.png"/>
</descimg>
    The left is the main image, which in this example is a map of the Kanto region. The right is the "area image" where each area is filled to correspond to each prefecture.<r/>
    The area image is filled with different (unique) palette indices for each area. The numbers written in each area in the example are these palette indices (they're just there for clarity and aren't actually necessary). Areas filled with palette index 0 (ocean in the map) are not used as clickable areas.<r/>
<r/>
    You'll need graphics editing software that can work with 256-color images and show "palette indices" (these might also be called color indices, index colors, or color numbers in different software). What's important here is the palette index (color number), not the actual color. When Kirikiri reads the area image, it only looks at the palette indices, not the colors. The colors can be any colors that make it easy to distinguish between areas during editing.<r/>
<r/>
    The area image filename is typically the main image filename (minus extension) with _p added. For example, if the main image is named map.png, the area image (if saved as PNG) would be map_p.png.<r/>
</para>

<para>
<ptitle>About Area Action Definition Files</ptitle>
    An area action definition file defines what happens when each area of the clickable map is clicked.<r/>
    It has the extension .ma and typically uses the same filename as the main image file. For example, if the main image is named map.png, the area action definition file would be map.ma.<r/>
<r/>
    The area action definition file is a text file that can be edited with a text editor.<r/>
<r/>
    Each line in the area action definition file contains "area number : action" (using half-width colon).<r/>
    For example, for the map above:<r/>
<bq>
11: hint="Ibaraki"; storage="maptest2.ks"; target="*m11";<r/>
8: hint="Gunma"; storage="maptest2.ks"; target="*m8";<r/>
7: hint="Tochigi"; storage="maptest2.ks"; target="*m7";<r/>
9: hint="Saitama"; storage="maptest2.ks"; target="*m9";<r/>
10: hint="Chiba"; storage="maptest2.ks"; target="*m10";<r/>
12: hint="Tokyo"; storage="maptest2.ks"; target="*m12";<r/>
2: hint="Kanagawa"; storage="maptest2.ks"; target="*m2";<r/>
3: hint="Yamanashi"; storage="maptest2.ks"; target="*m3";<r/>
1: hint="Nagano"; storage="maptest2.ks"; target="*m1";<r/>
4: hint="Shizuoka"; storage="maptest2.ks"; target="*m4";<r/>
5: hint="Niigata"; storage="maptest2.ks"; target="*m5";<r/>
6: hint="Fukushima"; storage="maptest2.ks"; target="*m6";<r/>
</bq>
    The area numbers correspond to the palette indices in the area image shown above.<r/>
    The <kw>action</kw> (the part after the colon) follows KAG syntax rather than TJS syntax, but it's not complex.<r/>
    It's just a series of "name=value;" pairs. Don't forget the semicolons.<r/>
<r/>
    The following names can be used:<r/>
<dl>
<dt>storage, target, onenter, onleave, hint, exp, countpage </dt>
<dd>
    These all have the same functionality as in the link tag, but all values must be enclosed in " " (double quotes) when specified (as in the example above). Not using " " will cause errors or incorrect behavior.
</dd>
<dt>cursor</dt>
<dd>
    Specifies the mouse cursor shape when the cursor is over the area. Follows the same rules as the cursor tag, but when using mouse cursor constants starting with cr, write them directly with & (for example cursor = crSizeAll;). When specifying a mouse cursor filename, enclose it in " " (double quotes) (for example cursor = "wagtail.ani";).
</dd>
</dl>
<r/>
    Area number 0 is used for special instructions in the area action definition file. In this version, autodisable is available. For example:
<bq>
0 : autodisable=false;
</bq>
    This makes the clickable map remain active (can still function as a clickable map) even after being clicked. Usually, you don't need this instruction.<r/>
    If this instruction isn't given and there's no area number 0 specification in the area action definition file, the clickable map becomes inactive (cannot function as a clickable map) when clicked, until the area action definition file is read again with the <kw>image</kw> tag or <kw>mapaction</kw> tag.<r/>
<r/>
<note>
    If no action is defined, that area becomes inactive. For example, if you want to make areas available or unavailable based on conditions, you can use TJS if statements like:<r/>
11: if(f.flag == 1) { hint="Ibaraki"; storage="maptest2.ks"; target="*m11"; }<r/>
    In this case, the action "hint="Ibaraki"; storage="maptest2.ks"; target="*m11";" will only be defined when f.flag is 1.
</note>
</para>

<para>
<ptitle>Let's Try Using a Clickable Map</ptitle>
    Let's try using a clickable map.<r/>
    Using the example above, we have map1.png as the main image, map1_p.png as the area image, and map1.ma as the area action definition file.<r/>
    The image tag searches for a file with _p added to the base filename and a file with the .ma extension, loading them as the area image and area action definition file respectively when it loads the main file.<r/>
    Therefore, normally you only need to use the image tag to make a clickable map usable.<r/>
<note>
    The <kw>mapimage</kw> tag and mapaction tag are also available if you need to load the area image and area action definition file separately.
</note>
    For example, let's write the following content in maptest.ks:<r/>
<bq>
*start<r/>
@image layer=0 page=fore visible=true storage=map1<r/>
@position left=400 width=220<r/>
@wt<r/>
Clickable map test.<r/>
@s<r/>
</bq>
    This will make the clickable map usable and stop at the s tag.<r/>
<r/>
<descimg>
<dititle>How it looks when running</dititle>
<img src="clickable.png"/>
</descimg>
<r/>
    You need to write the scenario that will be jumped to when the clickable map is clicked. For example, write the following content in maptest2.ks:<r/>
<bq>
*m11<r/>
@cm<r/>
This is Ibaraki.[l]<r/>
@jump storage="maptest.ks" target="*start"<r/>
<r/>
*m8<r/>
@cm<r/>
This is Gunma.[l]<r/>
@jump storage="maptest.ks" target="*start"<r/>
<r/>
*m7<r/>
@cm<r/>
This is Tochigi.[l]<r/>
@jump storage="maptest.ks" target="*start"<r/>
<r/>
*m9<r/>
@cm<r/>
This is Saitama.[l]<r/>
@jump storage="maptest.ks" target="*start"<r/>
<r/>
*m10<r/>
@cm<r/>
This is Chiba.[l]<r/>
@jump storage="maptest.ks" target="*start"<r/>
<r/>
*m12<r/>
@cm<r/>
This is Tokyo.[l]<r/>
@jump storage="maptest.ks" target="*start"<r/>
<r/>
*m2<r/>
@cm<r/>
This is Kanagawa.[l]<r/>
@jump storage="maptest.ks" target="*start"<r/>
<r/>
*m3<r/>
@cm<r/>
This is Yamanashi.[l]<r/>
@jump storage="maptest.ks" target="*start"<r/>
<r/>
*m1<r/>
@cm<r/>
This is Nagano.[l]<r/>
@jump storage="maptest.ks" target="*start"<r/>
<r/>
*m4<r/>
@cm<r/>
This is Shizuoka.[l]<r/>
@jump storage="maptest.ks" target="*start"<r/>
<r/>
*m5<r/>
@cm<r/>
This is Niigata.[l]<r/>
@jump storage="maptest.ks" target="*start"<r/>
<r/>
*m6<r/>
@cm<r/>
This is Fukushima.[l]<r/>
@jump storage="maptest.ks" target="*start"<r/>
</bq>
<r/>
<note>
    When an image with a clickable map is active in KAG (whether visible or not), it switches to a mode that emulates mouse movement with keyboard cursor keys. This means you cannot use other keyboard-dependent features like the edit tag during this time.<r/>
    The normal keyboard mode returns when you either disable the map with the mapdisable tag, or destroy the clickable map by using the freeimage tag or loading a different image on that layer.
</note>
</para>

</doc>