<?xml version="1.0" encoding="iso-8859-1" ?>

<doc>
<title>Using Choices</title>

<para>
<ptitle>Defining Labels</ptitle>
    Before using choices, we need to create <kw>labels</kw>.<r/>
    After a choice is selected, the scenario flow needs to branch to somewhere. Labels serve as destinations for these flow movements.<r/>
<r/>
    A label is a line that starts with *. You've seen them in samples until now. For example...<r/>
<bq>
[wait time=200]<r/>
<b>*start|Start</b><r/>
[cm]<r/>
Hello.<r/>
</bq>
    As shown here, we've defined a label named *start. The part after | (vertical bar) like "|Start" is something we'll discuss elsewhere <comlink href="SaveLoad"/>. The part after | can be omitted.<r/>
<r/>
    While you can use any characters for label names, it's recommended to stick to half-width alphanumeric characters. Also, please don't use half-width spaces in label names.<r/>
<r/>
    Labels have important functions beyond being destinations for flow movement, such as serving as save/load points. We'll discuss this along with the meaning of | (vertical bar) elsewhere.<r/>
</para>

<para>
<ptitle>Using Choices</ptitle>
    In KAG, choices are implemented in a way similar to hyperlinks.<r/>
    To create choices, we use the <kw>link</kw> and <kw>endlink</kw> tags. Text enclosed between these two tags becomes selectable by mouse or keyboard. When clicked with the mouse or when Enter is pressed on the keyboard, it jumps to the label specified in the target parameter of the link tag.<r/>
    Also, for waiting for choices or ending scenarios, we use the <tt>[<kw>s</kw>]</tt> tag. When "Continue until next choice" is selected from the menu, the scenario will run non-stop until it reaches the next <tt>[s]</tt> tag.<r/>
    Using these, we can write something like this. Don't forget the * (asterisk) after target=. Also, when specifying after target, the part after | (vertical bar) isn't needed.<r/>
<r/>
<bq>
[wait time=200]<r/>
*start|Start<r/>
[cm]<r/>
<b>[link target=*select1]Choice 1[endlink][r]<r/>
[link target=*select2]Choice 2[endlink][r]<r/>
[link target=*select3]Choice 3[endlink][r]<r/>
[s]</b><r/>
<r/>
*select1<r/>
Choice 1 was selected.[l]<r/>
[s]<r/>
<r/>
*select2<r/>
Choice 2 was selected.[l]<r/>
[s]<r/>
<r/>
*select3<r/>
Choice 3 was selected.[l]<r/>
[s]<r/>
</bq>
    If you run this as is, the choices will remain even after selection.<r/>
    To fix this, add [cm] after normal labels.<r/>
[Example with [cm] added omitted for brevity]
<r/>
<descimg>
<dititle>Choice Example</dititle>
<img src="Diverge.png"/>
</descimg>

<note>
    Once a choice is selected, it cannot be selected again until either new choices are displayed or the <kw>unlocklink</kw> tag is executed.<r/>
    Also, there's a <kw>locklink</kw> tag to make choices already displayed on screen unselectable.<r/>
    In normal writing, you don't need to worry about this.<r/>
</note>
</para>

<para>
<ptitle>Multiple Scenario Files</ptitle>
    Sometimes for management purposes, you might want to split scenario files into two or more.<r/>
    This is simple - just add the storage parameter to the link tag. For example, to prepare a scenario called scn2.ks and jump to its label *scn2start...<r/>
<bq>
[link storage="scn2.ks" target=*scn2start]scn2.ks to scn2start[endlink]<r/>
</bq>
<r/>
When this choice is clicked, scn2.ks will be loaded and it will jump to the label *scn2start.<r/>
</para>

<para>
<ptitle>Other Scenario Control Information</ptitle>
    There's a jump tag for jumping directly to a specified label.<r/>
    Also, the link tag has functions like executing TJS (Kirikiri's native scripting language) code when clicked.
    The <kw>button</kw> tag is for making choices using prepared images as buttons rather than text. It's used for graphical choice selection.<r/>
    Please refer to <link href="Tags"/>.<r/>
</para>

</doc>